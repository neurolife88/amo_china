---
alwaysApply: true
---
# React Rules

## Component Patterns
- Use functional components with hooks
- Prefer composition over inheritance
- Use React.memo for performance optimization
- Implement proper prop validation with TypeScript
- Use custom hooks for reusable logic
- Follow the single responsibility principle

## State Management
- Use useState for local component state
- Use useReducer for complex state logic
- Implement proper error boundaries
- Use context for global state sparingly
- Prefer local state over global state

## Performance
- Use useCallback for expensive computations
- Use useMemo for derived state
- Implement proper dependency arrays
- Avoid unnecessary re-renders
- Use React.lazy for code splitting
